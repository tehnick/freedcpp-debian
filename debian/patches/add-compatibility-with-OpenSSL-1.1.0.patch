From f3f5474a68fd52c38bd55b6cc2e1ec316a124325 Mon Sep 17 00:00:00 2001
From: Boris Pek <tehnick-8@yandex.ru>
Date: Sun, 19 Aug 2018 14:39:57 +0300
Subject: [PATCH 2/4] Core: add compatibility with OpenSSL >= 1.1.0.

---
 dcpp/CryptoManager.cpp | 13 +++++++++----
 dcpp/SSLSocket.cpp     | 13 ++++++++++---
 2 files changed, 19 insertions(+), 7 deletions(-)

diff --git a/dcpp/CryptoManager.cpp b/dcpp/CryptoManager.cpp
index ef5e7fa..7ba250f 100644
--- a/dcpp/CryptoManager.cpp
+++ b/dcpp/CryptoManager.cpp
@@ -107,10 +107,15 @@ CryptoManager::CryptoManager()
                 };
 
 		if(dh) {
-			dh->p = BN_bin2bn(dh4096_p, sizeof(dh4096_p), 0);
-			dh->g = BN_bin2bn(dh4096_g, sizeof(dh4096_g), 0);
-
-			if (!dh->p || !dh->g) {
+			BIGNUM *p = BN_bin2bn(dh4096_p, sizeof(dh4096_p), 0);
+			BIGNUM *g = BN_bin2bn(dh4096_g, sizeof(dh4096_g), 0);
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
+			dh->p = p;
+			dh->g = g;
+#else
+			DH_set0_pqg(dh, p, NULL, g);
+#endif
+			if(!p || !g) {
 				dh.reset();
 			} else {
 				SSL_CTX_set_options(serverContext, SSL_OP_SINGLE_DH_USE);
diff --git a/dcpp/SSLSocket.cpp b/dcpp/SSLSocket.cpp
index 15081da..7f9d9ab 100644
--- a/dcpp/SSLSocket.cpp
+++ b/dcpp/SSLSocket.cpp
@@ -37,6 +37,13 @@ void SSLSocket::connect(const string& aIp, uint16_t aPort) throw(SocketException
 	waitConnected(0);
 }
 
+#if OPENSSL_VERSION_NUMBER < 0x10002000L
+static inline int SSL_is_server(SSL *s)
+{
+	return s->server;
+}
+#endif
+
 bool SSLSocket::waitConnected(uint32_t millis) {
 	if(!ssl) {
 		if(!Socket::waitConnected(millis)) {
@@ -54,9 +61,9 @@ bool SSLSocket::waitConnected(uint32_t millis) {
 	}
 
 	while(true) {
-		int ret = ssl->server?SSL_accept(ssl):SSL_connect(ssl);
+		int ret = SSL_is_server(ssl)?SSL_accept(ssl):SSL_connect(ssl);
 		if(ret == 1) {
-			dcdebug("Connected to SSL server using %s as %s\n", SSL_get_cipher(ssl), ssl->server?"server":"client");
+			dcdebug("Connected to SSL server using %s as %s\n", SSL_get_cipher(ssl), SSL_is_server(ssl)?"server":"client");
 			return true;
 		}
 		if(!waitWant(ret, millis)) {
@@ -116,7 +123,7 @@ bool SSLSocket::waitWant(int ret, uint32_t millis) {
 
 int SSLSocket::read(void* aBuffer, int aBufLen) throw(SocketException) {
 	if(!ssl) {
-		return -1;
+		return 0;
 	}
 	int len = checkSSL(SSL_read(ssl, aBuffer, aBufLen));
 
-- 
2.18.0

